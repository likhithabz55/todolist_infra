apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: db            #pods will be named app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db 
    spec:
      containers:                     #specifies the container image the pods will run
        - name: postgres
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: todo
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
---

apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    app: db
spec:
  type: ClusterIP
  selector:
    app: db # Select pods with label app=mongodb
  ports:
    - port: 5432 # Service Port
      targetPort: 5432 # Pods Port
      
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend            #pods will be named app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: "${FRONTEND_VERSION}"
    spec:
      containers:                     #specifies the container image the pods will run
        - name: frontend
          image: todolist-app/frontend:${FRONTEND_VERSION}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: ClusterIP
  selector:
    app: frontend
    version: "${FRONTEND_VERSION}"
  ports:
    - port: 80
      targetPort: 3000
         
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskview-service-deployment
  labels:
    app: taskview            #pods will be named app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: taskview
  template:
    metadata:
      labels:
        app: taskview
    spec:
      containers:                     #specifies the container image the pods will run
        - name: taskview-service
          image: todolist-app/taskview-service:01
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://db-service:5432/todo
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
---

apiVersion: v1
kind: Service
metadata:
  name: taskview-service
spec:
  type: ClusterIP
  selector:
    app: taskview
  ports:
    - port: 80
      targetPort: 8082
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: user            #pods will be named app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:                     #specifies the container image the pods will run
        - name: user-service
          image: todolist-app/user-service:01
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://db-service:5432/todo
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres


---

apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  type: ClusterIP
  selector:
    app: user
  ports:
    - port: 80
      targetPort: 8081


