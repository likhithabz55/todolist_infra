apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskview-service-deployment
  labels:
    app: taskview-service            #pods will be named app: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: taskview-service
  template:
    metadata:
      labels:
        app: taskview-service
    spec:
      nodeSelector:
        arch: arm64
    spec:
      containers:                     #specifies the container image the pods will run
        - name: taskview-service
          image: 822298509516.dkr.ecr.us-east-1.amazonaws.com/blue_green_ecr/taskview_service:${CURRENT_VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://app-postgres-db.corvmoudbvkz.us-east-1.rds.amazonaws.com:5432/mydb
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_DB
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_PASSWORD

---

apiVersion: v1
kind: Service
metadata:
  name: taskview-service
  labels:
    app: taskview-service
spec:
  type: ClusterIP
  selector:
    app: taskview-service
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8082

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: user-service            #pods will be named app: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      nodeSelector:
        arch: arm64
    spec:
      containers:                     #specifies the container image the pods will run
        - name: user-service
          image: 822298509516.dkr.ecr.us-east-1.amazonaws.com/blue_green_ecr/user_service:${CURRENT_VERSION} #pulls image from repo
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://app-postgres-db.corvmoudbvkz.us-east-1.rds.amazonaws.com:5432/mydb
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_DB
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rds-postgres-secret
                  key: POSTGRES_PASSWORD


---

apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8081



